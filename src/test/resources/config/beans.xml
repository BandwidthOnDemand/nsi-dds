<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer" />

    <bean id="springApplicationContext" class="net.es.nsi.dds.spring.SpringApplicationContext" scope="singleton" />

    <bean id="ddsConfiguration" class="net.es.nsi.dds.dao.DdsConfiguration" init-method="load" scope="singleton">
        <property name="filename" value="#{ systemProperties['ddsConfigFile'] }"/>
    </bean>

    <bean id="restClient" class="net.es.nsi.dds.client.RestClient" scope="singleton">
        <constructor-arg index="0" ref="ddsConfiguration"/>
    </bean>
    
    <bean id="authorizationProvider" class="net.es.nsi.dds.authorization.DnAuthorizationProvider" scope="singleton">
        <constructor-arg index="0" ref="ddsConfiguration"/>
    </bean>

    <bean id="ddsServer" class="net.es.nsi.dds.server.DdsServer" scope="singleton" depends-on="authorizationProvider">
        <constructor-arg index="0" ref="ddsConfiguration"/>
    </bean>

    <bean id="cacheProfile" class="net.es.nsi.dds.dao.CacheProfile" scope="singleton">
        <constructor-arg index="0" ref="ddsConfiguration"/>
    </bean>

    <bean id="repositoryProfile" class="net.es.nsi.dds.dao.RepositoryProfile" scope="singleton">
        <constructor-arg index="0" ref="ddsConfiguration"/>
    </bean>

    <bean id="documentCache" class="net.es.nsi.dds.dao.DocumentCache" init-method="load" scope="singleton">
        <constructor-arg index="0" ref="cacheProfile"/>
    </bean>

    <bean id="documentRepository" class="net.es.nsi.dds.dao.DocumentCache" init-method="load" scope="singleton">
        <constructor-arg index="0" ref="repositoryProfile"/>
    </bean>

    <bean id="remoteSubscriptionCache" class="net.es.nsi.dds.dao.RemoteSubscriptionCache" scope="singleton" />

    <bean id="agoleManifestReader" class="net.es.nsi.dds.agole.AgoleManifestReader" scope="prototype" lazy-init="true">
        <constructor-arg index="0" ref="restClient"/>
    </bean>

    <bean id="ddsActorSystem" class="net.es.nsi.dds.actors.DdsActorSystem" scope="singleton" />

    <bean id="localDocumentActor" class="net.es.nsi.dds.actors.LocalDocumentActor" scope="singleton" lazy-init="true">
        <constructor-arg index="0" ref="ddsActorSystem"/>
        <constructor-arg index="1" ref="ddsConfiguration"/>
        <property name="interval" value="300"/>
    </bean>

    <bean id="documentExpiryActor" class="net.es.nsi.dds.actors.DocumentExpiryActor" scope="singleton" lazy-init="true">
        <constructor-arg index="0" ref="ddsActorSystem"/>
        <constructor-arg index="1" ref="documentCache"/>
        <property name="interval" value="600"/>
    </bean>

    <bean id="configurationActor" class="net.es.nsi.dds.actors.ConfigurationActor" scope="singleton" lazy-init="true">
        <constructor-arg index="0" ref="ddsActorSystem"/>
        <constructor-arg index="1" ref="ddsConfiguration"/>
        <property name="interval" value="300"/>
    </bean>

    <bean id="agoleDiscoveryRouter" class="net.es.nsi.dds.agole.AgoleDiscoveryRouter" scope="singleton" lazy-init="true">
        <constructor-arg index="0" ref="ddsActorSystem"/>
        <constructor-arg index="1" ref="ddsConfiguration"/>
        <constructor-arg index="2" ref="agoleManifestReader"/>
        <property name="poolSize" value="10"/>
        <property name="interval" value="600"/>
    </bean>

    <bean id="gof3DiscoveryRouter" class="net.es.nsi.dds.gangofthree.Gof3DiscoveryRouter" scope="singleton" lazy-init="true">
        <constructor-arg index="0" ref="ddsActorSystem"/>
        <constructor-arg index="1" ref="ddsConfiguration"/>
        <property name="poolSize" value="5"/>
        <property name="interval" value="1200"/>
        <property name="refresh" value="10"/>
    </bean>

    <bean id="registrationRouter" class="net.es.nsi.dds.actors.RegistrationRouter" scope="singleton" lazy-init="true">
        <constructor-arg index="0" ref="ddsActorSystem"/>
        <constructor-arg index="1" ref="ddsConfiguration"/>
        <constructor-arg index="2" ref="remoteSubscriptionCache"/>
        <property name="poolSize" value="5"/>
        <property name="interval" value="600"/>
    </bean>

    <bean id="notificationRouter" class="net.es.nsi.dds.actors.NotificationRouter" scope="singleton" lazy-init="true">
        <constructor-arg index="0" ref="ddsActorSystem"/>
        <constructor-arg index="1" ref="ddsConfiguration"/>
        <constructor-arg index="2" ref="discoveryProvider"/>
        <constructor-arg index="3" ref="documentCache"/>
        <constructor-arg index="4" ref="restClient"/>
        <property name="poolSize" value="5"/>
        <property name="notificationSize" value="5"/>
    </bean>

    <bean id="ddsActorController" class="net.es.nsi.dds.actors.DdsActorController" init-method="init" scope="singleton" depends-on="remoteSubscriptionCache, ddsServer">
        <constructor-arg index="0" ref="ddsActorSystem"/>
        <constructor-arg index="1" ref="ddsConfiguration"/>
        <constructor-arg index="2">
            <list>
                <bean class="net.es.nsi.dds.actors.ActorEntry"><property name="actor" value="configurationActor" /><property name="start" value="false" /></bean>
                <bean class="net.es.nsi.dds.actors.ActorEntry"><property name="actor" value="localDocumentActor" /><property name="start" value="false" /></bean>
                <bean class="net.es.nsi.dds.actors.ActorEntry"><property name="actor" value="documentExpiryActor" /><property name="start" value="false" /></bean>
                <bean class="net.es.nsi.dds.actors.ActorEntry"><property name="actor" value="notificationRouter" /><property name="start" value="false" /></bean>
                <bean class="net.es.nsi.dds.actors.ActorEntry"><property name="actor" value="registrationRouter" /><property name="start" value="true" /></bean>
                <bean class="net.es.nsi.dds.actors.ActorEntry"><property name="actor" value="gof3DiscoveryRouter" /><property name="start" value="true" /></bean>
                <bean class="net.es.nsi.dds.actors.ActorEntry"><property name="actor" value="agoleDiscoveryRouter" /><property name="start" value="true" /></bean>
            </list>
        </constructor-arg>
    </bean>

    <bean id="discoveryProvider" class="net.es.nsi.dds.provider.DdsProvider" init-method="init" scope="singleton" depends-on="ddsServer">
        <constructor-arg index="0" ref="ddsConfiguration"/>
        <constructor-arg index="1" ref="documentCache"/>
        <constructor-arg index="2" ref="documentRepository"/>
        <constructor-arg index="3" ref="ddsActorController"/>
    </bean>
</beans>
