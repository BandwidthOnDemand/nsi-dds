<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>net.es.nsi</groupId>
  <artifactId>nsi-dds</artifactId>
  <version>1.3.0-RELEASE</version>
  <packaging>jar</packaging>
  <scm>
    <developerConnection>scm:git:https://github.com/BandwidthOnDemand/nsi-dds.git</developerConnection>
    <tag>HEAD</tag>
  </scm>

  <properties>
    <project.scm.id>github</project.scm.id>
    <maven.javadoc.skip>true</maven.javadoc.skip>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
  </properties>

  <dependencies>
    <!-- Jersey for JAX-RS and HTTP container runtime. -->
    <dependency>
      <groupId>org.glassfish.jersey.containers</groupId>
      <artifactId>jersey-container-grizzly2-servlet</artifactId>
      <version>3.1.3</version>
    </dependency>

    <dependency>
      <groupId>org.glassfish.jersey.core</groupId>
      <artifactId>jersey-server</artifactId>
      <version>3.1.3</version>
    </dependency>
<!--
    <dependency>
      <groupId>org.glassfish.jersey.media</groupId>
      <artifactId>jersey-media-jaxb</artifactId>
      <version>3.1.3</version>
    </dependency>
-->
    <dependency>
      <groupId>org.glassfish.jersey.media</groupId>
      <artifactId>jersey-media-moxy</artifactId>
      <version>3.1.3</version>
    </dependency>

    <dependency>
      <groupId>org.glassfish.jersey.connectors</groupId>
      <artifactId>jersey-apache-connector</artifactId>
      <version>3.1.3</version>
    </dependency>

    <dependency>
      <groupId>org.glassfish.jersey.inject</groupId>
      <artifactId>jersey-hk2</artifactId>
      <version>3.1.3</version>
            <exclusions>
        <exclusion>
          <groupId>org.glassfish.hk2.external</groupId>
          <artifactId>aopalliance-repackaged</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.glassfish.hk2</groupId>
      <artifactId>hk2-metadata-generator</artifactId>
      <version>3.0.4</version>
      <exclusions>
        <exclusion>
          <groupId>org.glassfish.hk2.external</groupId>
          <artifactId>aopalliance-repackaged</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.glassfish.jersey.core</groupId>
      <artifactId>jersey-common</artifactId>
      <version>3.1.3</version>
    </dependency>

    <!-- Needed for our use of JAXB API bindings. -->
    <dependency>
      <groupId>jakarta.xml.bind</groupId>
      <artifactId>jakarta.xml.bind-api</artifactId>
      <version>4.0.0</version>
    </dependency>

    <!-- Needed for REST API bindings. -->
    <dependency>
      <groupId>jakarta.ws.rs</groupId>
      <artifactId>jakarta.ws.rs-api</artifactId>
      <version>3.1.0</version>
    </dependency>

    <!-- For content encoding types. -->
    <dependency>
      <groupId>jakarta.mail</groupId>
      <artifactId>jakarta.mail-api</artifactId>
      <version>2.1.2</version>
    </dependency>

    <!-- For priority annotations. -->
    <dependency>
      <groupId>jakarta.annotation</groupId>
      <artifactId>jakarta.annotation-api</artifactId>
      <version>2.1.1</version>
    </dependency>

    <dependency>
      <groupId>jakarta.inject</groupId>
      <artifactId>jakarta.inject-api</artifactId>
      <version>2.0.1</version>
    </dependency>

    <!-- For spring beans to drive configuration loading. -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-beans</artifactId>
      <version>6.0.11</version>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
      <version>6.0.11</version>
    </dependency>

    <dependency>
      <groupId>org.apache.httpcomponents.client5</groupId>
      <artifactId>httpclient5</artifactId>
      <version>5.2.1</version>
      <exclusions>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- Needed for certificate DN manipulation. -->
    <dependency>
      <groupId>org.bouncycastle</groupId>
      <artifactId>bcprov-jdk15on</artifactId>
      <version>1.70</version>
    </dependency>

    <dependency>
      <groupId>org.bouncycastle</groupId>
      <artifactId>bcpkix-jdk15on</artifactId>
      <version>1.70</version>
    </dependency>

    <dependency>
      <groupId>org.bouncycastle</groupId>
      <artifactId>bctls-jdk15on</artifactId>
      <version>1.70</version>
    </dependency>

    <!-- The agent messaging infrastructure for internal communications. -->
    <dependency>
      <groupId>com.typesafe.akka</groupId>
      <artifactId>akka-actor_2.12</artifactId>
      <version>2.7.0</version>
    </dependency>

    <dependency>
      <groupId>com.typesafe.akka</groupId>
      <artifactId>akka-slf4j_2.12</artifactId>
      <version>2.7.0</version>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>2.0.7</version>
    </dependency>

    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.4.9</version>
    </dependency>

    <!-- Google JSON parsers for reading configuration data from files. -->
    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
      <version>2.10.1</version>
    </dependency>

    <!-- For FileUtils -->
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>[1.4,)</version>
    </dependency>

    <!-- For scheduling capabilities. -->
    <dependency>
      <groupId>org.quartz-scheduler</groupId>
      <artifactId>quartz</artifactId>
      <version>[2.3.2,)</version>
    </dependency>

    <dependency>
      <groupId>org.quartz-scheduler</groupId>
      <artifactId>quartz-jobs</artifactId>
      <version>[2.3.2,)</version>
    </dependency>

    <!-- Quartz is dependent on this. -->
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-collections4</artifactId>
      <version>[4.4,)</version>
    </dependency>

    <!-- Used for DDS CLI client application. -->
    <dependency>
      <groupId>commons-cli</groupId>
      <artifactId>commons-cli</artifactId>
      <version>[1.4,)</version>
    </dependency>

    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>[24.1.1,)</version>
    </dependency>

    <!-- For logging, setter, and builder annotation patterns. -->
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>[1.18.28,)</version>
    </dependency>

    <!-- These are for unit tests. -->
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>[3.9.0,)</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.hamcrest</groupId>
          <artifactId>hamcrest-core</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-library</artifactId>
      <version>[2.2,)</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.13.2</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.glassfish.jersey.test-framework.providers</groupId>
      <artifactId>jersey-test-framework-provider-grizzly2</artifactId>
      <version>[3.0.1,)</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-clean-plugin</artifactId>
      <version>3.3.1</version>
      <type>maven-plugin</type>
    </dependency>
  </dependencies>

  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
        <includes>
          <include>**/version.properties</include>
        </includes>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>false</filtering>
        <excludes>
          <exclude>**/version.properties</exclude>
        </excludes>
      </resource>
    </resources>

    <plugins>
      <plugin>
        <groupId>pl.project13.maven</groupId>
        <artifactId>git-commit-id-plugin</artifactId>
        <version>2.2.6</version>
        <executions>
          <execution>
            <id>get-the-git-infos</id>
            <goals>
              <goal>revision</goal>
            </goals>
            <phase>initialize</phase>
          </execution>
        </executions>
        <configuration>
          <generateGitPropertiesFile>true</generateGitPropertiesFile>
          <generateGitPropertiesFilename>src/main/resources/git.properties</generateGitPropertiesFilename>
          <commitIdGenerationMode>flat</commitIdGenerationMode>
          <gitDescribe>
            <tags>true</tags>
          </gitDescribe>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>versions-maven-plugin</artifactId>
        <version>2.5</version>
        <configuration>
          <generateBackupPoms>false</generateBackupPoms>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.1</version>
        <configuration>
          <!-- Compatible down to java 17. -->
          <release>17</release>
          <compilerArgument>-Xlint:deprecation</compilerArgument>
        </configuration>
      </plugin>

      <plugin>
        <!-- We use this plugin to ensure that our usage of the
        maven-jaxb2-plugin is JDK 8 compatible in absence of a fix
        for https://java.net/jira/browse/MAVEN_JAXB2_PLUGIN-80. -->
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>properties-maven-plugin</artifactId>
        <version>1.0-alpha-2</version>
        <executions>
          <execution>
            <id>set-additional-system-properties</id>
            <goals>
              <goal>set-system-properties</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <properties>
            <property>
              <name>javax.xml.accessExternalDTD</name>
              <value>file,http,all</value>
            </property>
          </properties>
          <outputFile/>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>jaxb2-maven-plugin</artifactId>
        <version>2.4</version>
        <executions>

          <!-- Here we build the DDS Configuration schema. -->
          <execution>
            <id>configuration</id>
            <goals>
              <goal>xjc</goal>
            </goals>
            <configuration>
              <sources>
                <source>${basedir}/src/main/schema/configuration/xsd</source>
              </sources>
              <xjbSources>
                <xjbSource>${basedir}/src/main/schema/configuration/xjb</xjbSource>
              </xjbSources>
              <packageName>net.es.nsi.dds.jaxb.configuration</packageName>
            </configuration>
          </execution>

          <!-- Here we build the DDS Management schema. -->
          <execution>
            <id>management</id>
            <goals>
              <goal>xjc</goal>
            </goals>
            <configuration>
              <sources>
                <source>${basedir}/src/main/schema/management/xsd</source>
              </sources>
              <xjbSources>
                <xjbSource>${basedir}/src/main/schema/management/xjb</xjbSource>
              </xjbSources>
              <packageName>net.es.nsi.dds.jaxb.management</packageName>
              <clearOutputDir>false</clearOutputDir>
            </configuration>
          </execution>

          <!-- Here we build the DDS Discover Protocol schema. -->
          <execution>
            <id>dds</id>
            <goals>
              <goal>xjc</goal>
            </goals>
            <configuration>
              <sources>
                <source>${basedir}/src/main/schema/discovery/xsd</source>
              </sources>
              <xjbSources>
                <xjbSource>${basedir}/src/main/schema/discovery/xjb</xjbSource>
              </xjbSources>
              <packageName>net.es.nsi.dds.jaxb.dds</packageName>
              <clearOutputDir>false</clearOutputDir>
            </configuration>
          </execution>

          <!-- Here we build the NSI Topology schema. -->
          <execution>
            <id>topology</id>
            <goals>
              <goal>xjc</goal>
            </goals>
            <configuration>
              <sources>
                <source>${basedir}/src/main/schema/topology/xsd</source>
              </sources>
              <xjbSources>
                <xjbSource>${basedir}/src/main/schema/topology/xjb</xjbSource>
              </xjbSources>
              <packageName>net.es.nsi.dds.jaxb.nml</packageName>
              <clearOutputDir>false</clearOutputDir>
            </configuration>
          </execution>

          <!-- Here we build the NSA Discovery Document schema. -->
          <execution>
            <id>nsa</id>
            <goals>
              <goal>xjc</goal>
            </goals>
            <configuration>
              <sources>
                <source>${basedir}/src/main/schema/nsa/xsd</source>
              </sources>
              <xjbSources>
                <xjbSource>${basedir}/src/main/schema/nsa/xjb</xjbSource>
              </xjbSources>
              <packageName>net.es.nsi.dds.jaxb.nsa</packageName>
              <clearOutputDir>false</clearOutputDir>
            </configuration>
          </execution>

          <!-- Here we build the Digital Signature schema. -->
          <execution>
            <id>signatures</id>
            <goals>
              <goal>xjc</goal>
            </goals>
            <configuration>
              <sources>
                <source>${basedir}/src/main/schema/signatures/xsd</source>
              </sources>
              <xjbSources>
                <xjbSource>${basedir}/src/main/schema/signatures/xjb</xjbSource>
              </xjbSources>
              <packageName>net.es.nsi.dds.jaxb.signatures</packageName>
              <clearOutputDir>false</clearOutputDir>
            </configuration>
          </execution>
        </executions>

        <dependencies>
          <dependency>
            <groupId>org.glassfish.jaxb</groupId>
            <artifactId>jaxb-xjc</artifactId>
            <version>4.0.3</version>
            <scope>compile</scope>
          </dependency>

          <dependency>
            <groupId>org.glassfish.jaxb</groupId>
            <artifactId>jaxb-core</artifactId>
            <version>4.0.3</version>
            <scope>compile</scope>
          </dependency>

          <dependency>
            <groupId>org.glassfish.jaxb</groupId>
            <artifactId>jaxb-runtime</artifactId>
            <version>4.0.3</version>
            <scope>compile</scope>
          </dependency>
        </dependencies>
      </plugin>

      <!-- Set up DDS document files for unit tests. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.8</version>
        <executions>
          <execution>
            <phase>compile</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <echo>Copying test files to unit test locations.</echo>
                <copy todir="${project.basedir}/src/test/resources/config/cache">
                  <fileset dir="${project.basedir}/src/test/resources/test-cache" />
                </copy>
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>
      
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.22.2</version>
        <dependencies>
          <dependency>
            <groupId>org.apache.maven.surefire</groupId>
            <artifactId>surefire-junit47</artifactId>
            <version>2.22.2</version>
          </dependency>
        </dependencies>
        <configuration>
          <argLine>--illegal-access=permit</argLine>
          <argLine>-Xmx1024m -Djava.net.preferIPv4Stack=true</argLine>
          <argLine>-Djersey.config.test.container.port=8801</argLine>
          <argLine>-Dcom.sun.xml.bind.v2.runtime.JAXBContextImpl.fastBoot=true</argLine>
          <argLine>-Djava.util.logging.config.file=./src/test/resources/config/logging.properties</argLine>
          <argLine>-D-Dlogging.config=./src/test/resources/config/logback-test.xml</argLine>
          <argLine>-Dlogback.configurationFile=./src/test/resources/config/logback-test.xml</argLine>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>3.6.0</version>
        <executions>
          <execution>
            <id>copy-dependencies</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/lib</outputDirectory>
              <overWriteReleases>false</overWriteReleases>
              <overWriteSnapshots>false</overWriteSnapshots>
              <overWriteIfNewer>true</overWriteIfNewer>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.3.0</version>
        <configuration>
          <archive>
            <manifest>
              <addClasspath>true</addClasspath>
              <classpathPrefix>lib/</classpathPrefix>
              <mainClass>net.es.nsi.dds.server.Main</mainClass>
            </manifest>
          </archive>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>2.22.0</version>
        <configuration>
          <argLine>--illegal-access=permit</argLine>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <version>3.3.1</version>
        <configuration>
          <filesets>
            <fileset>
              <directory>${basedir}/var</directory>
            </fileset>
          </filesets>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.2.0</version>
        <configuration>
          <propertiesEncoding>${project.build.sourceEncoding}</propertiesEncoding>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <distributionManagement>
    <repository>
      <id>github</id>
      <name>GitHub BandwidthOnDemand nsi-dds Apache Maven Packages</name>
      <url>https://maven.pkg.github.com/BandwidthOnDemand/nsi-dds</url>
    </repository>
  </distributionManagement>

</project>
