# Default values for nsi-dds.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  registry: docker.io
  repository: hnstrmprt/nsi-dds
  pullPolicy: IfNotPresent
  # tag overrides the image tag whose default is the chart appVersion
  # tag: "1.0.4.1"
  home: "/nsi-dds"

startupProbe:
  scheme: "HTTP"
  path: "/dds/portal"
  failureThreshold: 30
  periodSeconds: 10

livenessProbe:
  scheme: "HTTP"
  path: "/dds/portal"
  failureThreshold: 5
  periodSeconds: 6

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: false
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  name: nsi-dds
  port: 80
  containerPort: 8401
# configure either ClusterIP or LoadBalancer + ipAddress
  type: ClusterIP
#  type: LoadBalancer
#  ipAddress: 145.101.126.224
#  annotations:
#    service.beta.kubernetes.io/azure-load-balancer-internal: "true"

ingress:
  enabled: false
  annotations:
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
  hosts:
    - host: front.example.domain
      paths: 
        - path: "/nsi-dds/(.*)"
  tls:
    - secretName: tls-secret-api
      hosts:
        - front.example.domain

resources:
  requests:
    memory: 0.5Gi
    cpu: 100m
  limits:
    memory: 1.5Gi
    cpu: 1000m

nodeSelector: {}

tolerations: []

affinity: {}

config:
  name: "nsi-dds-config"
  mountPath: "/config"
  configFilesGlob: "config/*"

cache:
  name: "nsi-dds-cache"
  mountPath: "/cache"
  storage: "1Gi"
